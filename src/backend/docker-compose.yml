version: '3.8'

services:
  # DocShield AI Voice Agent Worker Service
  worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: docshield-worker
    environment:
      - NODE_ENV=development
      - PORT=8080
      - MEMORY_LIMIT=512M
      - TZ=UTC
      - MALLOC_ARENA_MAX=2
    env_file: .env
    volumes:
      - ./src:/app/src:ro
      - ./package.json:/app/package.json:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      - node_modules:/app/node_modules
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    networks:
      - docshield-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1'
      restart_policy:
        condition: on-failure
        max_attempts: 3
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    command: npm run dev
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL

  # Redis for job queue and caching
  redis:
    image: redis:7.0-alpine
    container_name: docshield-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      - docshield-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL

  # MongoDB for local development
  mongodb:
    image: mongo:6.0
    container_name: docshield-mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=docshield
    volumes:
      - mongodb-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "127.0.0.1:27017:27017"
    networks:
      - docshield-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL

volumes:
  redis-data:
    driver: local
  mongodb-data:
    driver: local
  node_modules:
    driver: local

networks:
  docshield-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
    driver_opts:
      com.docker.network.bridge.name: docshield
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"